{{questionDesc}}

import std/[
  algorithm,
  bitops,
  cstrutils,
  deques,
  heapqueue,
  jsconsole,
  jsre,
  math,
  macros,
  sequtils,
  strformat,
  strutils,
  sugar,
]

type {{className}} = ref object
  # fields

{{#if constructor}}
proc new{{className}}({{constructor.params}}): {{className}} {.exportc: "{{className}}".} =
  var this {.importc, nodecl.}: {{className}}

  # init fields

  this
{{/if}}


{{#each methods}}
proc {{name}}(this: {{className}}, {{params}}): {{returnType}} =
  {{defaultReturnValue}}

{{/each}}


# js wrappers
{{#each methods}}
{.emit: "{{className}}.prototype.{{name}} = {{name}}".}
proc {{name}}Js({{params}}): {{returnType}} {.exportc: "{{name}}".} =
  var this {.importc, nodecl.}: {{className}}
  this.{{name}}({{paramNames}})

{{/each}}
