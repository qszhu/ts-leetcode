{{questionDesc}}

import std/[algorithm, bitops, complex, cstrutils, deques, heapqueue, math, macros, parseutils, sequtils, strformat, strutils, sugar]
import std/[jsbigints, jsconsole, jsre]

import types

type {{className}} = ref object
  # fields

{{#if constructor}}
proc new{{className}}({{constructor.params}}): {{className}} {.exportc: "{{className}}".} =
  var this {.importc, nodecl.}: {{className}}

  # init fields

  this
{{/if}}


{{#each methods}}
proc {{name}}(this: {{className}}{{#if params}}, {{params}}{{/if}}): {{returnType}} =
  {{defaultReturnValue}}

{{/each}}


# js wrappers
{{#each methods}}
{.emit: "{{className}}.prototype.{{name}} = {{name}}".}
proc {{name}}Js({{params}}): {{returnType}} {.exportc: "{{name}}".} =
  var this {.importc, nodecl.}: {{className}}
  this.{{name}}({{paramNames}})

{{/each}}
